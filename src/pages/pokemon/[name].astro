---
import Layout from '../../layouts/Layout.astro';


export async function getStaticPaths() {
    const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
    const data = await res.json();
    return data.results.map((pokemon: { name: string }) => ({
        params: { name: pokemon.name }
       
    }));
}

const { name } = Astro.params;
const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);
const info = await res.json();

const pokemon = {
    name: info.name,
    image: info.sprites.other['official-artwork'].front_default,
    types: info.types.map((type: { type: { name: string } }) => type.type.name),
    height: info.height,
    weight: info.weight,
    baseExp: info.base_experience,
    stats: info.stats.map((stat: { stat: { name: string }, base_stat: number }) => ({
        name: stat.stat.name,
        value: stat.base_stat
    }))
};
---

<Layout title={`Details of ${pokemon.name}`}>
    <div class="flex flex-col items-center justify-center gap-4">
        <img src={pokemon.image} alt={pokemon.name} class="w-64 h-64 mx-auto" />
        <h1 class="text-4xl font-bold capitalize text-center">{pokemon.name}</h1>
        <div class="flex gap-2 mt-2">
            {pokemon.types.map((type: string) => (
            
                <span class="text-xs bg-yellow-400 text-gray-900 px-2 py-1 rounded-full">{type}</span>
            ))}
    
        </div>
        <p class="text-sm">Height: {pokemon.height/ 10} m</p>
        <p class="text-sm">Weight: {pokemon.weight/ 10} kg</p>
        <p class="text-sm">Base Exp: {pokemon.baseExp} xp</p>
        <div class="bg-gray-700 rounded-xl shadow-lg p-6 w-full max-w-md">
            <h2 class="text-xl font-bold text-white mb-4 text-center">Statistics</h2>
            <div class="space-y-3">
                {pokemon.stats.map((stat: { name: string, value: number }) => (
                    <div class="flex flex-col gap-1">
                        <div class="flex justify-between text-sm text-gray-300">
                            <span class="capitalize">{stat.name}</span>
                            <span class="font-semibold">{stat.value}</span>
                        </div>
                        <div class="w-full bg-gray-600 rounded-full h-2">
                            <div 
                                class="bg-yellow-400 h-2 rounded-full" 
                                style={`width: ${(stat.value / 255) * 100}%`}
                            ></div>
                        </div>
                    </div>
                ))}
            </div>
        </div>
        <a href="/" class="bg-yellow-400 text-gray-900 px-4 py-2 rounded-full underline hover:bg-yellow-500 transition-colors">Back Home</a>
    </div>
</Layout>